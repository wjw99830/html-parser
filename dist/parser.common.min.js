"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const tagOrAttrName=/[^><\/ ]+/,attrDoubleQuote=new RegExp(`${tagOrAttrName.source}="[^"]*"`),attrSingleQuote=new RegExp(`${tagOrAttrName.source}='[^']*'`),attrNoneQuote=new RegExp(`${tagOrAttrName.source}`),attr=new RegExp(`(${attrDoubleQuote.source})|(${attrSingleQuote.source})|(${attrNoneQuote.source})`),startTag=new RegExp(`(?<tagName>${tagOrAttrName.source})`),endTag=/<\/\k<tagName>>/,tag=new RegExp(`<${startTag.source}( +(?<attrs>${attr.source}))* *>(?<children>.*?)${endTag.source}`),tagGlobal=new RegExp(`${tag.source}`,"g"),parse=t=>{const e=(t=t.replace(/[\n\r]/g,"")).match(tagGlobal),r=[];if(e)for(const t of e){const e=t.match(tag),{tagName:a,children:o}=e.groups,n=e.groups.attrs||"",s={tag:a,attrs:[],children:[]};for(const t of n.match(new RegExp(attr,"g"))||[]){let[e,r]=t.split("=");r=r?r.replace(/["']/g,""):"",s.attrs.push({key:e,value:r})}s.children=parse(o),r.push(s)}else r.push({tag:"text",text:t,attrs:[],children:[]});return r},generate=t=>{const e=document.createDocumentFragment();for(const r of t)if("text"===r.tag){const t=document.createTextNode(r.text);e.appendChild(t)}else{const t=document.createElement(r.tag);for(const e of r.attrs)t.setAttribute(e.key,e.value);t.appendChild(generate(r.children)),e.appendChild(t)}return e},transform=t=>{const e=parse(t);return generate(e)};exports.transform=transform;

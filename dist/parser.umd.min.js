!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e=e||self).HTMLParser={})}(this,function(e){"use strict";const t=/[^><\/ ]+/,r=new RegExp(`${t.source}="[^"]*"`),n=new RegExp(`${t.source}='[^']*'`),o=new RegExp(`${t.source}`),s=new RegExp(`(${r.source})|(${n.source})|(${o.source})`),c=new RegExp(`(?<tagName>${t.source})`),a=new RegExp(`<${c.source}( +(?<attrs>${s.source}))* *>(?<children>.*?)${/<\/\k<tagName>>/.source}`),u=new RegExp(`${a.source}`,"g"),p=e=>{const t=(e=e.replace(/[\n\r]/g,"")).match(u),r=[];if(t)for(const e of t){const t=e.match(a),{tagName:n,children:o}=t.groups,c=t.groups.attrs||"",u={tag:n,attrs:[],children:[]};for(const e of c.match(new RegExp(s,"g"))||[]){let[t,r]=e.split("=");r=r?r.replace(/["']/g,""):"",u.attrs.push({key:t,value:r})}u.children=p(o),r.push(u)}else r.push({tag:"text",text:e,attrs:[],children:[]});return r},d=e=>{const t=document.createDocumentFragment();for(const r of e)if("text"===r.tag){const e=document.createTextNode(r.text);t.appendChild(e)}else{const e=document.createElement(r.tag);for(const t of r.attrs)e.setAttribute(t.key,t.value);e.appendChild(d(r.children)),t.appendChild(e)}return t};e.transform=e=>{const t=p(e);return d(t)},Object.defineProperty(e,"__esModule",{value:!0})});
